scalar Date
scalar FloatNaN

type MeasurementDTO {
    id: ID
    name: String
    barcode: String
    description: String
    rows: Int
    columns: Int
    createdOn: Date
    createdBy: String
    updatedOn: Date
    updatedBy: String
    wellColumns: [String]
    subWellColumns:[String]
    imageChannels: [String]
}

type WellDataDTO {
    measurementId: ID
    column: String
    data: [FloatNaN]
}

type SubwellDataDTO {
    measurementId: ID
    wellNr: Int
    column: String
    data: [FloatNaN]
}

input FilterOptions {
    ids: [ID]
    from: Date
    to: Date
}

type Query {
    measurements(filter: FilterOptions): [MeasurementDTO]
    measurementById(measurementId: ID): MeasurementDTO
    measurementDataById(measurementId: ID): [WellDataDTO]
    measurementDataByIdAndWellColumn(measurementId: ID, wellColumn: String): WellDataDTO
    measurementSubWellDataByIdAndWellNr(measurementId: ID, wellNr: Int): [SubwellDataDTO]
    measurementSubWellDataByIdAndColumns(measurementId: ID, columns: [String]): [SubwellDataDTO]
    measurementSubWellDataByIdAndWellNrAndColumns(measurementId: ID, wellNr: Int, columns: [String]): [SubwellDataDTO]
    getUniqueWellDataColumns: [String]
    getUniqueSubWellDataColumns: [String]
}
